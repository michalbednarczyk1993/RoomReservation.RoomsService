# TODO: create profiles
# Stare springowe konfiguracje
#spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
#
#spring.datasource.url=jdbc:mysql://localhost:3307/rooms_mysql
#spring.datasource.username=user
#spring.datasource.password=password
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql=true

quarkus.datasource.db-kind = mysql
quarkus.datasource.username = user
quarkus.datasource.password = password
quarkus.datasource.jdbc.url = jdbc:mysql://localhost:3307/rooms_mysql

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create


quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.path=/my-openapi.json
quarkus.swagger-ui.title=Rooms Service
